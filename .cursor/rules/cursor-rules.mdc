# Cursor Rules Location

How to add new cursor rules to the project

1. Always place rule files in PROJECT_ROOT/.cursor/rules/:
    ```
    .cursor/rules/
    ├── your-rule-name.mdc
    ├── another-rule.mdc
    └── ...
    ```

2. **Always include the header at the top of every rule file.** The header must contain at least the following fields: `description`, `globs`, and `alwaysApply`. The header must never be deleted or omitted from any rule file.

3. Follow the naming convention:
    - Use kebab-case for filenames
    - Always use .mdc extension
    - Make names descriptive of the rule's purpose

4. Directory structure:
    ```
    PROJECT_ROOT/
    ├── .cursor/
    │   └── rules/
    │       ├── your-rule-name.mdc
    │       └── ...
    └── ...
    ```

5. Never place rule files:
    - In the project root
    - In subdirectories outside .cursor/rules
    - In any other location

6. Cursor rules have the following structure:

```
---
description: Short description of the rule's purpose
globs: optional/path/pattern/**/*
alwaysApply: false
---
# Rule Title

Main content explaining the rule with markdown formatting.

1. Step-by-step instructions
2. Code examples
3. Guidelines

Example:

```typescript
// Good example
function goodExample() {
  // Implementation following guidelines
}

// Bad example
function badExample() {
  // Implementation not following guidelines
}
```

**Be sure that the header is present and correct when you finish a new rule. Never delete or omit the header.**
```

Be sure that the header is correct when you finish a new rule.

---

## Header Enforcement

**Automated or manual header checks are required for all rule files in `.cursor/rules/`.**

- Every rule file must start with a header containing at least:
  - `description:`
  - `globs:`
  - `alwaysApply:`
- The header must be at the very top of the file, before any other content.
- PRs or commits that add or modify rule files **must be blocked or flagged** if the header is missing or malformed.

### Example: Pre-commit Hook (Bash)

Add this to `.git/hooks/pre-commit` to block commits with missing headers:

```bash
#!/bin/bash
for file in $(git diff --cached --name-only | grep '^.cursor/rules/.*\.mdc$'); do
  if ! grep -q '^---' "$file" || ! grep -q '^description:' "$file" || ! grep -q '^globs:' "$file" || ! grep -q '^alwaysApply:' "$file"; then
    echo "[ERROR] $file is missing a required header (---, description, globs, alwaysApply)."
    exit 1
  fi
done
```

- Make the hook executable: `chmod +x .git/hooks/pre-commit`
- This will prevent commits if any rule file is missing the required header fields.

**Manual review is also encouraged for header correctness and completeness.**
  // Implementation not following guidelines
}
```

Be sure that the header is correct when you finish a new rule.